# Default values for flagsmith.

api:
    image:
        repository: flagsmith/flagsmith-api
        tag: null  # defaults to .Chart.AppVersion
        imagePullPolicy: IfNotPresent
        imagePullSecrets: []
    replicacount: 1
    podAnnotations: {}
    resources: {}
    # limits:
    #     cpu: 500m
    #     memory: 500Mi
    # requests:
    #     cpu: 300m
    #     memory: 300Mi
    podLabels: {}
    env:
        - name: DJANGO_ALLOWED_HOSTS
          value: '*'
    nodeSelector: {}
    tolerations: []
    affinity: {}
    livenessProbe:
        failureThreshold: 5
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
    readinessProbe:
        failureThreshold: 10
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
    dbWaiter:
        image:
            repository: willwill/wait-for-it
            tag: latest
            imagePullPolicy: IfNotPresent
        timeoutSeconds: 30

frontend:
    enabled: true
    image:
        repository: flagsmith/flagsmith-frontend
        tag: null  # defaults to .Chart.AppVersion
        imagePullPolicy: IfNotPresent
        imagePullSecrets: []
    replicacount: 1
    resources: {}
    # limits:
    #     cpu: 500m
    #     memory: 500Mi
    # requests:
    #     cpu: 300m
    #     memory: 300Mi
    env:
    # TODO: Set the API URL to be the hostname of the API image above. Full url should be e.g. API_URL=http[s]://<api-hostname>/api/vi
        - name: API_URL
          value: '/api/v1/'
        - name: ASSET_URL
          value: '/'
    nodeSelector: {}
    tolerations: []
    affinity: {}
    livenessProbe:
        failureThreshold: 20
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
    readinessProbe:
        failureThreshold: 20
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10

postgresql:
    enabled: true
    serviceAccount:
        enabled: true
    nameOverride: flagsmith-postgresql
    postgresqlDatabase: flagsmith
    postgresqlUsername: postgres
    postgresqlPassword: flagsmith

influxdb:
    enabled: true
    nameOverride: influxdb
    image:
        repository: quay.io/influxdb/influxdb
        tag: v2.0.2
        imagePullPolicy: IfNotPresent
        imagePullSecrets: []
    adminUser:
        organization: "influxdata"
        bucket: "default"
        user: "admin"
        ## Leave empty to generate a random password and token.
        ## Or fill any of these values to use fixed values.
        password: ""
        token: ""
    persistence:
        enabled: false
        # name: influxdb-pvc
        # storageClass: "-"
        # accessMode: ReadWriteOnce
        # size: 50Gi
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}

influxdbExternal:
    enabled: false
    url: null
    bucket: null
    organization: null
    token: null
    tokenFromExistingSecret:
        enabled: false
        name: null
        key: null

hooks:
    enabled: false
    removeOnSuccess: true

service:
    influxdb:
        externalPort: 8080
    api:
        type: ClusterIP
        port: 8000
    frontend:
        type: ClusterIP
        port: 8080

ingress:
    frontend:
        enabled: false
        annotations: {}
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        hosts:
            - host: chart-example.local
              paths: []
        tls: []
        #  - secretName: chart-example-tls
        #    hosts:
        #      - chart-example.local
    api:
        enabled: false
        annotations: {}
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"
        hosts:
            - host: chart-example.local
              paths: []
        tls: []
        #  - secretName: chart-example-tls
        #    hosts:
        #      - chart-example.local
