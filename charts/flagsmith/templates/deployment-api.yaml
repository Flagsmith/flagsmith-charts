apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "flagsmith.fullname" . }}-api
  labels:
    {{- include "flagsmith.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  selector:
    matchLabels:
      {{- include "flagsmith.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  replicas: {{ .Values.api.replicacount }}
  template:
    metadata:
      annotations:
        checksum/secrets-api: {{ include (print $.Template.BasePath "/secrets-api.yaml") . | sha256sum }}
        {{- if .Values.influxdb.enabled }}
        checksum/secrets-influxdb: {{ include (print $.Template.BasePath "/secrets-influxdb.yaml") . | sha256sum }}
        {{- end }}
        {{- if and .Values.influxdbExternal.enabled (not .Values.influxdbExternal.tokenFromExistingSecret.enabled) }}
        checksum/secrets-influxdb-external: {{ include (print $.Template.BasePath "/secrets-influxdb-external.yaml") . | sha256sum }}
        {{- end }}
{{- if .Values.api.podAnnotations }}
{{ toYaml .Values.api.podAnnotations | nindent 8 }}
{{- end }}
      labels:
        {{- include "flagsmith.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
        {{- if .Values.api.podLabels }}
{{ toYaml .Values.api.podLabels | indent 8 }}
        {{- end }}
    spec:
      {{- if .Values.api.affinity }}
      affinity:
{{ toYaml .Values.api.affinity | indent 4 }}
      {{- end }}
      {{- if .Values.api.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.api.nodeSelector | indent 4 }}
      {{- end }}
      {{- if .Values.api.tolerations }}
      tolerations:
{{ toYaml .Values.api.tolerations | indent 4 }}
      {{- end }}
      {{- if .Values.api.schedulerName }}
      schedulerName: "{{ .Values.api.schedulerName }}"
      {{- end }}
      {{- if .Values.api.image.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.api.image.imagePullSecrets | indent 4 }}
      {{- end }}
      securityContext:
        {{- $securityContext := .Values.api.podSecurityContext | default (dict) | deepCopy }}
        {{- if .Values.api.defaultPodSecurityContext.enabled }}
        {{- $securityContext = $securityContext | merge (omit .Values.api.defaultPodSecurityContext "enabled") }}
        {{- end }}
        {{- toYaml $securityContext | nindent 8 }}
      initContainers:
{{- if eq .Values.databaseExternal.enabled false }}
      - name: wait-for-db
        image: {{ .Values.api.dbWaiter.image.repository }}:{{ .Values.api.dbWaiter.image.tag }}
        imagePullPolicy: {{ .Values.api.dbWaiter.image.imagePullPolicy }}
        command:
          - /wait-for-it.sh
          - --host={{ template "flagsmith.postgres.hostname" . }}
          - --port=5432
          - --timeout={{ .Values.api.dbWaiter.timeoutSeconds }}
{{- end }}
      - name: migrate-db
        image: {{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default (printf "%s" .Chart.AppVersion) }}
        imagePullPolicy: {{ .Values.api.image.imagePullPolicy }}
        command:
          - python
          - manage.py
          - migrate
        env: {{ include (print $.Template.BasePath "/_api_environment.yaml") . | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}-api
        image: {{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default (printf "%s" .Chart.AppVersion) }}
        imagePullPolicy: {{ .Values.api.image.imagePullPolicy }}
        # command: ["sleep", "3600"]
        ports:
        - containerPort: {{ .Values.service.api.port }}
        env: {{ include (print $.Template.BasePath "/_api_environment.yaml") . | nindent 8 }}
        livenessProbe:
          failureThreshold: {{ .Values.api.livenessProbe.failureThreshold }}
          httpGet:
            path: /
            port: {{ .Values.service.api.port }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.api.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.api.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.api.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.api.livenessProbe.timeoutSeconds }}
        readinessProbe:
          failureThreshold: {{ .Values.api.readinessProbe.failureThreshold }}
          httpGet:
            path: /
            port: {{ .Values.service.api.port }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.api.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.api.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.api.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.api.readinessProbe.timeoutSeconds }}
        resources:
{{ toYaml .Values.api.resources | indent 10 }}
