apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "flagsmith.fullname" . }}
  labels:
    {{- include "flagsmith.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  selector:
    matchLabels:
      {{- include "flagsmith.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  replicas: {{ .Values.frontend.replicacount }}
  template:
    metadata:
      {{- if .Values.frontend.podAnnotations }}
      annotations:
{{ toYaml .Values.frontend.podAnnotations | indent 8 }}
      {{- end }}
      labels:
        {{- include "flagsmith.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
        {{- if .Values.frontend.podLabels }}
{{ toYaml .Values.frontend.podLabels | indent 8 }}
        {{- end }}
    spec:
      {{- if .Values.frontend.affinity }}
      affinity:
{{ toYaml .Values.frontend.affinity | indent 4 }}
      {{- end }}
      {{- if .Values.frontend.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.frontend.nodeSelector | indent 4 }}
      {{- end }}
      {{- if .Values.frontend.tolerations }}
      tolerations:
{{ toYaml .Values.frontend.tolerations | indent 4 }}
      {{- end }}
      {{- if .Values.frontend.schedulerName }}
      schedulerName: "{{ .Values.frontend.schedulerName }}"
      {{- end }}
      {{- if .Values.frontend.image.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.frontend.image.imagePullSecrets | indent 4 }}
      {{- end }}
      securityContext:
        {{- $securityContext := .Values.frontend.podSecurityContext | default (dict) | deepCopy }}
        {{- if .Values.frontend.defaultPodSecurityContext.enabled }}
        {{- $securityContext = $securityContext | merge (omit .Values.frontend.defaultPodSecurityContext "enabled") }}
        {{- end }}
        {{- toYaml $securityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}-frontend
        image: {{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default (printf "%s" .Chart.AppVersion) }}
        imagePullPolicy: {{ .Values.frontend.image.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.service.frontend.port }}
        env:
        - name: ASSET_URL
          value: '/'
{{- if .Values.frontend.apiProxy.enabled }}
        - name: PROXY_API_URL
          value: http://{{ include "flagsmith.fullname" . }}-api.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.api.port }}
{{- end }}
{{- range $envName, $envValue := .Values.frontend.extraEnv }}
        - name: {{ $envName }}
          value: {{ $envValue | quote }}
{{- end }}
        livenessProbe:
          failureThreshold: {{ .Values.frontend.livenessProbe.failureThreshold }}
          httpGet:
            path: /health
            port: {{ .Values.service.frontend.port }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.frontend.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.frontend.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.frontend.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.frontend.livenessProbe.timeoutSeconds }}
        readinessProbe:
          failureThreshold: {{ .Values.frontend.readinessProbe.failureThreshold }}
          httpGet:
            path: /health
            port: {{ .Values.service.frontend.port }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.frontend.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.frontend.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.frontend.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.frontend.readinessProbe.timeoutSeconds }}
        resources:
{{ toYaml .Values.frontend.resources | indent 10 }}
